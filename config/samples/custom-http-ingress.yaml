apiVersion: mcp.mcp-operator.io/v1
kind: MCPServer
metadata:
  name: custom-http-ingress
  namespace: default
  labels:
    app.kubernetes.io/name: mcp-operator
    app.kubernetes.io/managed-by: kustomize
    mcp.example: custom-transport-ingress
spec:
  image: "my-custom-mcp-server:latest"
  replicas: 2

  # Custom transport configured for HTTP-like protocol with ingress support
  transport:
    type: "custom"
    config:
      custom:
        port: 9000
        protocol: "http"
        config:
          bufferSize: "8192"
          keepAlive: "true"
          timeout: "60s"
          enableStreaming: "true"

  # Service configuration
  service:
    type: ClusterIP
    port: 9000
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"

  # Ingress configuration with custom path
  ingress:
    enabled: true
    className: "nginx"
    host: "custom-mcp.example.com"
    path: "/api/mcp"
    pathType: "Prefix"
    annotations:
      # Custom path rewriting
      nginx.ingress.kubernetes.io/rewrite-target: "/"
      # Streaming optimizations for custom transport
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
      nginx.ingress.kubernetes.io/proxy-body-size: "10m"
      # Custom headers
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-MCP-Transport: custom";
        more_set_headers "X-MCP-Protocol: http";
      # CORS for custom transport
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
      nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
      # Metrics and monitoring
      nginx.ingress.kubernetes.io/enable-metrics: "true"
      nginx.ingress.kubernetes.io/server-snippet: |
        access_log /var/log/nginx/mcp-custom-access.log json;
        error_log /var/log/nginx/mcp-custom-error.log;
      # Additional monitoring annotations
      nginx.org/prometheus-metrics: "true"
      nginx.org/prometheus-port: "9113"

  # Health checks for custom HTTP endpoint
  healthCheck:
    enabled: true
    path: "/health"
    port: 9000
    initialDelaySeconds: 20
    periodSeconds: 15

  # Resource requirements
  resources:
    requests:
      cpu: 150m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

  # Environment variables for custom transport
  environment:
    - name: LOG_LEVEL
      value: "debug"
    - name: CUSTOM_TRANSPORT_MODE
      value: "http"
    - name: ENABLE_METRICS
      value: "true"
    - name: STREAM_BUFFER_SIZE
      value: "8192"

  # Security configuration
  security:
    runAsUser: 1001
    runAsGroup: 1001
    readOnlyRootFilesystem: true

  # Pod template customization
  podTemplate:
    labels:
      mcp.transport: custom
      mcp.protocol: http
      mcp.ingress: enabled
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9000"
      prometheus.io/path: "/metrics"

  # Capabilities this custom MCP server provides
  capabilities:
    - "tools"
    - "resources"